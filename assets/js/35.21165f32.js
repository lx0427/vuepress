(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{399:function(s,t,a){"use strict";a.r(t);var e=a(26),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("linux 操作")]),s._v(" "),a("blockquote",[a("p",[s._v("查找进程")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找mongo进程id")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -axu "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" mongo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("进程id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h1",{attrs:{id:"启动docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动docker"}},[s._v("#")]),s._v(" 启动docker")]),s._v(" "),a("p",[s._v("systemctl start docker\nsystemctl stop docker")]),s._v(" "),a("h1",{attrs:{id:"查看docker状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看docker状态"}},[s._v("#")]),s._v(" 查看docker状态")]),s._v(" "),a("p",[s._v("systemctl status docker")]),s._v(" "),a("h1",{attrs:{id:"开启自启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启自启动"}},[s._v("#")]),s._v(" 开启自启动")]),s._v(" "),a("p",[s._v("systemctl enable docker")]),s._v(" "),a("h1",{attrs:{id:"关闭自启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭自启动"}},[s._v("#")]),s._v(" 关闭自启动")]),s._v(" "),a("p",[s._v("systemctl disable docker.service")])])}),[],!1,null,null,null);t.default=r.exports}}]);